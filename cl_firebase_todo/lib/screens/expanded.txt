  Expanded(
            child: StreamBuilder<QuerySnapshot>(
              stream: FirebaseFirestore.instance
                  .collection('ToDo')
                  .orderBy('id', descending: true)
                  .snapshots(),
              builder: (BuildContext context,
                  AsyncSnapshot<QuerySnapshot> snapshot) {
                if (snapshot.connectionState == ConnectionState.waiting) {
                  return const CircularProgressIndicator(); // While waiting for data, show a loading indicator
                }

                if (snapshot.hasError) {
                  return Text('Error: ${snapshot.error}');
                }

                if (!snapshot.hasData ||
                    snapshot.data == null ||
                    snapshot.data!.docs.isEmpty) {
                  return const Text('No ToDos');
                }

                return Expanded(
                  child: ListView.builder(
                    shrinkWrap: true,
                    itemCount: snapshot.data!.docs.length,
                    itemBuilder: (context, index) {
                      DocumentSnapshot doc = snapshot.data!.docs[index];
                      Map<String, dynamic>? data =
                          doc.data() as Map<String, dynamic>?;

                      if (data != null) {
                        ToDo todo = ToDo(
                          id: doc.id,
                          todoText: data['todoText'] ?? '',
                          // Add other fields from your ToDo model
                        );

                        return ToDoItem(
                          key: ValueKey(
                              todo.id), // Ensure each widget has a unique key
                          todo: todo,
                          onToDoChanged: (changedToDo) {
                            // Handle ToDo change logic
                            print(
                                'Clicked on Todo Item: ${changedToDo.todoText}');
                          },
                          onDeleteItem: (id) {
                            // Handle deletion logic
                            print(
                                'Clicked on Delete Icon for ToDo with ID: $id');
                          },
                        );
                      }

                      return const SizedBox(); // Placeholder widget if data retrieval fails
                    },
                  ),
                );
              },
            ),
          ),
       